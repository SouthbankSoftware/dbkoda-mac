{"version":3,"sources":["../src/setup.workflow.js"],"names":["app","cwd","helpers","currBuildId","data","SshClient","exec","remoteRoot","remoteVolumes","resolve","remoteExec","cmd","options","sshClient","assign","username","privateKey","process","env","SSH_PRIVATE_KEY","host","connect","then","shell","close","catch","Promise","reject","error","remotePaths","root","volumes"],"mappings":";;;;;;AAOA;;;;AACA;;;;;;AARA;;;;;;;kBAUe,UAACA,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAuB;AAAA,MACpBC,WADoB,GACeD,OADf,CAC5BE,IAD4B,CACpBD,WADoB;AAAA,MACLE,SADK,GACeH,OADf,CACLG,SADK;AAAA,MACMC,IADN,GACeJ,OADf,CACMI,IADN;;AAGpC;;AACA,MAAMC,aAAa,kBAAnB;AACA,MAAMC,gBAAgB,eAAKC,OAAL,CAAaF,UAAb,EAAyB,SAAzB,CAAtB;AACA,MAAMG,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAMC,OAAN,EAAkB;AACnC,QAAMC,YAAY,IAAIR,SAAJ,CAChB,iBAAES,MAAF,CACE;AACEC,gBAAU,OADZ;AAEEC,kBAAYC,QAAQC,GAAR,CAAYC,eAF1B;AAGEC,YAAM,WAHR;AAIEnB,WAAK,eAAKQ,OAAL,CAAaD,aAAb,EAA4BL,WAA5B;AAJP,KADF,EAOES,OAPF,CADgB,CAAlB;;AAYA,WAAOC,UACJQ,OADI,GAEJC,IAFI,CAEC;AAAA,aAAMT,UAAUU,KAAV,CAAgBZ,GAAhB,CAAN;AAAA,KAFD,EAGJW,IAHI,CAGCT,UAAUW,KAHX,EAIJC,KAJI,CAIE,iBAAS;AACdZ,gBAAUW,KAAV;AACA,aAAOE,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,KAPI,CAAP;AAQD,GArBD;AAsBA1B,UAAQQ,UAAR,GAAqBA,UAArB;AACAR,UAAQ2B,WAAR,GAAsB;AACpBC,UAAMvB,UADc;AAEpBwB,aAASvB;AAFW,GAAtB;;AAKA;AACA,SAAOF,KACL,uFADK,CAAP;AAGD,C","file":"setup.workflow.js","sourcesContent":["/**\n * @Author: guiguan\n * @Date:   2017-05-16T16:43:00+10:00\n * @Last modified by:   guiguan\n * @Last modified time: 2017-06-21T11:35:16+10:00\n */\n\nimport _ from 'lodash';\nimport path from 'path';\n\nexport default (app, cwd, helpers) => {\n  const { data: { currBuildId }, SshClient, exec } = helpers;\n\n  // setup helpers\n  const remoteRoot = '/Users/admin/uat';\n  const remoteVolumes = path.resolve(remoteRoot, 'volumes');\n  const remoteExec = (cmd, options) => {\n    const sshClient = new SshClient(\n      _.assign(\n        {\n          username: 'admin',\n          privateKey: process.env.SSH_PRIVATE_KEY,\n          host: '10.0.0.24',\n          cwd: path.resolve(remoteVolumes, currBuildId)\n        },\n        options\n      )\n    );\n\n    return sshClient\n      .connect()\n      .then(() => sshClient.shell(cmd))\n      .then(sshClient.close)\n      .catch(error => {\n        sshClient.close();\n        return Promise.reject(error);\n      });\n  };\n  helpers.remoteExec = remoteExec;\n  helpers.remotePaths = {\n    root: remoteRoot,\n    volumes: remoteVolumes\n  };\n\n  // setup ssh private key\n  return exec(\n    'mkdir -p ~/.ssh && echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa'\n  );\n};\n"]}